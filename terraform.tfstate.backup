{
  "version": 4,
  "terraform_version": "1.2.0",
  "serial": 561,
  "lineage": "230060ba-afb8-16c5-ec1d-b424e0694557",
  "outputs": {},
  "resources": [
    {
      "module": "module.eventbridge",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "vault-restore",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:events:us-west-2:288866261642:rule/vault-restore-events",
            "description": "vault trigger lambda",
            "event_bus_name": "default",
            "event_pattern": "{\"detail\":{\"createdResourceArn\":[\"arn:aws:dynamodb:us-west-2:288866261642:table/vault-lambda-restore-test\"],\"status\":[\"COMPLETED\"]},\"detail-type\":[\"Restore Job State Change\"],\"source\":[\"aws.backup\"]}",
            "id": "vault-restore-events",
            "is_enabled": true,
            "name": "vault-restore-events",
            "name_prefix": "",
            "role_arn": "",
            "schedule_expression": "",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eventbridge",
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "lambda-vault-restore",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:288866261642:function:ddb-vault-restore",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "http_target": [],
            "id": "vault-restore-events-VaultRestore",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "vault-restore-events",
            "run_command_targets": [],
            "sqs_target": [],
            "target_id": "VaultRestore"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eventbridge.aws_cloudwatch_event_rule.vault-restore",
            "module.vault-restore-lambda.aws_iam_role.role_restore",
            "module.vault-restore-lambda.aws_lambda_function.restore-vault-lambda",
            "module.vault-restore-lambda.aws_s3_bucket.lambda_s3_bucket",
            "module.vault-restore-lambda.aws_s3_object.file_upload",
            "module.vault-restore-lambda.data.archive_file.s3_files",
            "module.vault-restore-lambda.data.aws_caller_identity.current",
            "module.vault-restore-lambda.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.eventbridge",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "allow_cloudwatch_to_call_restore",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "ddb-vault-restore",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromCloudWatch",
            "principal": "events.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:events:us-west-2:288866261642:rule/vault-restore-events",
            "statement_id": "AllowExecutionFromCloudWatch",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eventbridge.aws_cloudwatch_event_rule.vault-restore",
            "module.vault-restore-lambda.aws_iam_role.role_restore",
            "module.vault-restore-lambda.aws_lambda_function.restore-vault-lambda",
            "module.vault-restore-lambda.aws_s3_bucket.lambda_s3_bucket",
            "module.vault-restore-lambda.aws_s3_object.file_upload",
            "module.vault-restore-lambda.data.archive_file.s3_files",
            "module.vault-restore-lambda.data.aws_caller_identity.current",
            "module.vault-restore-lambda.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1903849331",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vault-kms-unseal",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1717068000",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"VaultKMSUnseal\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ssmrole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ec2role\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"VaultDynamoDB\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:ListTagsOfResource\",\n        \"dynamodb:ListTables\",\n        \"dynamodb:GetRecords\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:DescribeTimeToLive\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:DescribeReservedCapacityOfferings\",\n        \"dynamodb:DescribeReservedCapacity\",\n        \"dynamodb:DescribeLimits\",\n        \"dynamodb:DeleteItem\",\n        \"dynamodb:CreateTable\",\n        \"dynamodb:BatchWriteItem\",\n        \"dynamodb:BatchGetItem\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:288866261642:table/*\"\n    },\n    {\n      \"Sid\": \"IAM\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:AssumeRole\",\n        \"iam:UpdateAccessKey\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetUser\",\n        \"iam:GetRole\",\n        \"iam:GetInstanceProfile\",\n        \"iam:GetAccessKeyLastUsed\",\n        \"iam:DeleteAccessKey\",\n        \"iam:CreateAccessKey\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"S3\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::vault-conf-bucket-01010101/*\"\n    },\n    {\n      \"Sid\": \"SecretsManager\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"secretsmanager:UpdateSecret\",\n        \"secretsmanager:GetSecretValue\"\n      ],\n      \"Resource\": [\n        \"arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo\",\n        \"arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx\"\n      ]\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "VaultKMSUnseal"
              },
              {
                "actions": [
                  "ssm:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "ssmrole"
              },
              {
                "actions": [
                  "ec2:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "ec2role"
              },
              {
                "actions": [
                  "dynamodb:BatchGetItem",
                  "dynamodb:BatchWriteItem",
                  "dynamodb:CreateTable",
                  "dynamodb:DeleteItem",
                  "dynamodb:DescribeLimits",
                  "dynamodb:DescribeReservedCapacity",
                  "dynamodb:DescribeReservedCapacityOfferings",
                  "dynamodb:DescribeTable",
                  "dynamodb:DescribeTimeToLive",
                  "dynamodb:GetItem",
                  "dynamodb:GetRecords",
                  "dynamodb:ListTables",
                  "dynamodb:ListTagsOfResource",
                  "dynamodb:PutItem",
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:UpdateItem"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-west-2:288866261642:table/*"
                ],
                "sid": "VaultDynamoDB"
              },
              {
                "actions": [
                  "iam:CreateAccessKey",
                  "iam:DeleteAccessKey",
                  "iam:GetAccessKeyLastUsed",
                  "iam:GetInstanceProfile",
                  "iam:GetRole",
                  "iam:GetUser",
                  "iam:ListAccessKeys",
                  "iam:UpdateAccessKey",
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "IAM"
              },
              {
                "actions": [
                  "s3:GetObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:s3:::vault-conf-bucket-01010101/*"
                ],
                "sid": "S3"
              },
              {
                "actions": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:UpdateSecret"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx",
                  "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo"
                ],
                "sid": "SecretsManager"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "data",
      "type": "template_file",
      "name": "userdata",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "7a6d5addce3b6785dd6614b207d0218dd9978a300de31165231fe911d11d0ea0",
            "rendered": "#!/bin/bash\r\n\r\nset -xe \r\n\r\n# Send userdata to log\r\n[[ ! -d /var/log/userdata ]] \u0026\u0026 mkdir -p /var/log/userdata/\r\nexec \u003e \u003e(tee /var/log/userdata/userdata.log | logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# install jq - I found AWS yum repos are not reliable for this, so grab it from github\r\nwget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64\r\nchmod +x jq-linux64\r\nmv jq-linux64 /usr/bin/jq\r\n\r\n# Get vault from hashicorp\r\nwget https://releases.hashicorp.com/vault/1.7.3/vault_1.7.3_linux_amd64.zip -O /tmp/vault.zip\r\n\r\n# Unzip /tmp/vault.zip to /usr/bin/vault\r\nunzip /tmp/vault.zip -d /usr/bin/ \u0026\u0026 rm -f /tmp/vault.zip\r\n\r\n# Setup vault user\r\ngroupadd --force --system vault\r\nif ! getent passwd vault \u003e/dev/null; then\r\n    adduser --system --gid vault --no-create-home --comment \"vault owner\" --shell /bin/false vault \u003e/dev/null\r\nfi\r\n\r\n# Login profile picked up when users login to the instance\r\ncat \u003c\u003c EOF \u003e /etc/profile.d/vault.sh\r\nexport VAULT_ADDR=http://127.0.0.1:8200\r\nEOF\r\n\r\n# Systemd service for vault\r\ncat \u003e /usr/lib/systemd/system/vault.service \u003c\u003c-EOF\r\n[Unit]\r\nDescription=Vault Service\r\nRequires=network-online.target\r\nAfter=network-online.target\r\n[Service]\r\nRestart=on-failure\r\nPermissionsStartOnly=true\r\nExecStartPre=/sbin/setcap 'cap_ipc_lock=+ep' /bin/vault\r\nExecStart=/bin/vault server -config /etc/vault/vault.conf\r\nExecReload=/bin/kill -HUP $MAINPID\r\nKillSignal=SIGTERM\r\nUser=vault\r\nGroup=vault\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\n\r\nsystemctl daemon-reload\r\nsystemctl enable vault\r\n\r\n# The vault config file\r\nmkdir /etc/vault\r\ncat \u003e /etc/vault/vault.conf \u003c\u003c-EOF\r\nlistener \"tcp\" {\r\n    address = \"0.0.0.0:8200\"\r\n    tls_disable = 1\r\n}\r\n\r\nui = true\r\n\r\nstorage \"dynamodb\" {\r\n    region          = \"us-west-2\"\r\n    table           = \"vault-table\"\r\n    read_capacity   = 3\r\n    write_capacity  = 3\r\n}\r\n\r\nseal \"awskms\" {\r\n    region      = \"us-west-2\"\r\n    kms_key_id  = \"19dbd4e6-d9bc-4839-b040-24e7c92bdf9a\"\r\n}\r\nEOF\r\n\r\nchown -R vault:vault /etc/vault\r\nchmod -R 0644 /etc/vault/*\r\n\r\nmkdir /var/log/vault\r\nchown vault:vault /var/log/vault\r\n\r\nsystemctl start vault\r\n\r\n# Give vault time to properly start and pull the awskms key.\r\nsleep 10\r\n\r\nexport VAULT_ADDR=http://127.0.0.1:8200\r\n\r\n# Check if vault is already initialised\r\nINITIALIZED=$(curl $VAULT_ADDR/v1/sys/init | jq '.initialized')\r\n\r\nif [ \"${INITIALIZED}\" != \"true\" ]; then\r\n    echo \"[] Vault DB not initialised, initialising now\"\r\n    ## Initialise vault and save token and unseal key\r\n    vault operator init -recovery-shares=1 -recovery-threshold=1 2\u003e\u00261 | tee ~/vault-init-out.txt\r\n    echo \"[] Vault status output\"\r\n    vault status | tee -a ~/vault-status.txt\r\n\r\n    # Get the VAULT_TOKEN so we can interact with vault\r\n    export VAULT_TOKEN=$(grep '^Initial Root Token:' ~/vault-init-out.txt | awk '{print $NF}')\r\n\r\n    # Get the unseal key\r\n    export RECOVERY_KEY=$(grep '^Recovery Key' ~/vault-init-out.txt | awk '{print $NF}')\r\n\r\n    # Save the root token and recovery key to aws secrets manager, then we can delete ~/vault-init-out.txt\r\n    # The secret resources have already been created by terraform (secrets-manager.tf)\r\n    aws secretsmanager update-secret --secret-id arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo --secret-string  \"${VAULT_TOKEN}\" --region us-west-2\r\n    aws secretsmanager update-secret --secret-id arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx --secret-string \"${RECOVERY_KEY}\" --region us-west-2\r\n\r\n    # '{\"username\":\"anika\",\"password\":\"'\"$serverPwd\"'\"}'\r\n\r\n    # Remove the temp file which has the root token details\r\n    rm -f ~/vault-init-out.txt\r\nelse\r\n    # Vault already initialised, which means the db is up which has our role, so login with that role, then exit this script.\r\n    echo \"[] Vault DB already initialised. Check we can login with aws method and exit\"\r\n    vault login -method=aws role=admin\r\n    echo \"[] Userdata finished.\"\r\n    exit\r\nfi\r\n\r\n# If we get here vault is not initialised\r\n\r\n# Enable vault logging\r\nvault audit enable file file_path=/var/log/vault/vault.log\r\n\r\n# Our instance role. Used to give this instance access to vault with the AWS engine\r\n# vault_instance_role=\"arn:aws:iam:us-west-2:$(curl -Ss http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.accountId'):role/vault-role\"\r\n\r\n# Enable the vault AWS and kv engine\r\nvault auth enable aws\r\nvault secrets enable -path=secret -version=2 kv\r\n\r\n# Get the vault-admin-policy.hcl file that was uploaded to S3 in s3.tf\r\naws s3 cp s3://vault-conf-bucket-01010101/vault-admin-policy.hcl /var/tmp/\r\n\r\n# Create the admin policy in vault\r\nvault policy write \"admin-policy\" /var/tmp/vault-admin-policy.hcl\r\n\r\n# Give this instance admin privileges to vault, tied to this instances vault_instance_role.\r\nvault write \\\r\n    auth/aws/role/admin \\\r\n    auth_type=iam \\\r\n    policies=admin-policy \\\r\n    max_ttl=1h \\\r\n    bound_iam_principal_arn=arn:aws:iam:us-west-2:288866261642:role/vault-role\r\n\r\necho \"[] Userdata finished.\"\r\n\r\n",
            "template": "#!/bin/bash\r\n\r\nset -xe \r\n\r\n# Send userdata to log\r\n[[ ! -d /var/log/userdata ]] \u0026\u0026 mkdir -p /var/log/userdata/\r\nexec \u003e \u003e(tee /var/log/userdata/userdata.log | logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# install jq - I found AWS yum repos are not reliable for this, so grab it from github\r\nwget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64\r\nchmod +x jq-linux64\r\nmv jq-linux64 /usr/bin/jq\r\n\r\n# Get vault from hashicorp\r\nwget https://releases.hashicorp.com/vault/1.7.3/vault_1.7.3_linux_amd64.zip -O /tmp/vault.zip\r\n\r\n# Unzip /tmp/vault.zip to /usr/bin/vault\r\nunzip /tmp/vault.zip -d /usr/bin/ \u0026\u0026 rm -f /tmp/vault.zip\r\n\r\n# Setup vault user\r\ngroupadd --force --system vault\r\nif ! getent passwd vault \u003e/dev/null; then\r\n    adduser --system --gid vault --no-create-home --comment \"vault owner\" --shell /bin/false vault \u003e/dev/null\r\nfi\r\n\r\n# Login profile picked up when users login to the instance\r\ncat \u003c\u003c EOF \u003e /etc/profile.d/vault.sh\r\nexport VAULT_ADDR=http://127.0.0.1:8200\r\nEOF\r\n\r\n# Systemd service for vault\r\ncat \u003e /usr/lib/systemd/system/vault.service \u003c\u003c-EOF\r\n[Unit]\r\nDescription=Vault Service\r\nRequires=network-online.target\r\nAfter=network-online.target\r\n[Service]\r\nRestart=on-failure\r\nPermissionsStartOnly=true\r\nExecStartPre=/sbin/setcap 'cap_ipc_lock=+ep' /bin/vault\r\nExecStart=/bin/vault server -config /etc/vault/vault.conf\r\nExecReload=/bin/kill -HUP $MAINPID\r\nKillSignal=SIGTERM\r\nUser=vault\r\nGroup=vault\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\n\r\nsystemctl daemon-reload\r\nsystemctl enable vault\r\n\r\n# The vault config file\r\nmkdir /etc/vault\r\ncat \u003e /etc/vault/vault.conf \u003c\u003c-EOF\r\nlistener \"tcp\" {\r\n    address = \"0.0.0.0:8200\"\r\n    tls_disable = 1\r\n}\r\n\r\nui = true\r\n\r\nstorage \"dynamodb\" {\r\n    region          = \"${region}\"\r\n    table           = \"${dynamodb-table}\"\r\n    read_capacity   = 3\r\n    write_capacity  = 3\r\n}\r\n\r\nseal \"awskms\" {\r\n    region      = \"${region}\"\r\n    kms_key_id  = \"${unseal-key}\"\r\n}\r\nEOF\r\n\r\nchown -R vault:vault /etc/vault\r\nchmod -R 0644 /etc/vault/*\r\n\r\nmkdir /var/log/vault\r\nchown vault:vault /var/log/vault\r\n\r\nsystemctl start vault\r\n\r\n# Give vault time to properly start and pull the awskms key.\r\nsleep 10\r\n\r\nexport VAULT_ADDR=http://127.0.0.1:8200\r\n\r\n# Check if vault is already initialised\r\nINITIALIZED=$(curl $VAULT_ADDR/v1/sys/init | jq '.initialized')\r\n\r\nif [ \"$${INITIALIZED}\" != \"true\" ]; then\r\n    echo \"[] Vault DB not initialised, initialising now\"\r\n    ## Initialise vault and save token and unseal key\r\n    vault operator init -recovery-shares=1 -recovery-threshold=1 2\u003e\u00261 | tee ~/vault-init-out.txt\r\n    echo \"[] Vault status output\"\r\n    vault status | tee -a ~/vault-status.txt\r\n\r\n    # Get the VAULT_TOKEN so we can interact with vault\r\n    export VAULT_TOKEN=$(grep '^Initial Root Token:' ~/vault-init-out.txt | awk '{print $NF}')\r\n\r\n    # Get the unseal key\r\n    export RECOVERY_KEY=$(grep '^Recovery Key' ~/vault-init-out.txt | awk '{print $NF}')\r\n\r\n    # Save the root token and recovery key to aws secrets manager, then we can delete ~/vault-init-out.txt\r\n    # The secret resources have already been created by terraform (secrets-manager.tf)\r\n    aws secretsmanager update-secret --secret-id ${secret_token_id} --secret-string  \"$${VAULT_TOKEN}\" --region ${region}\r\n    aws secretsmanager update-secret --secret-id ${secret_recovery_id} --secret-string \"$${RECOVERY_KEY}\" --region ${region}\r\n\r\n    # '{\"username\":\"anika\",\"password\":\"'\"$serverPwd\"'\"}'\r\n\r\n    # Remove the temp file which has the root token details\r\n    rm -f ~/vault-init-out.txt\r\nelse\r\n    # Vault already initialised, which means the db is up which has our role, so login with that role, then exit this script.\r\n    echo \"[] Vault DB already initialised. Check we can login with aws method and exit\"\r\n    vault login -method=aws role=admin\r\n    echo \"[] Userdata finished.\"\r\n    exit\r\nfi\r\n\r\n# If we get here vault is not initialised\r\n\r\n# Enable vault logging\r\nvault audit enable file file_path=/var/log/vault/vault.log\r\n\r\n# Our instance role. Used to give this instance access to vault with the AWS engine\r\n# vault_instance_role=\"arn:aws:iam:${region}:$(curl -Ss http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.accountId'):role/${instance-role}\"\r\n\r\n# Enable the vault AWS and kv engine\r\nvault auth enable aws\r\nvault secrets enable -path=secret -version=2 kv\r\n\r\n# Get the vault-admin-policy.hcl file that was uploaded to S3 in s3.tf\r\naws s3 cp s3://${vault_bucket}/vault-admin-policy.hcl /var/tmp/\r\n\r\n# Create the admin policy in vault\r\nvault policy write \"admin-policy\" /var/tmp/vault-admin-policy.hcl\r\n\r\n# Give this instance admin privileges to vault, tied to this instances vault_instance_role.\r\nvault write \\\r\n    auth/aws/role/admin \\\r\n    auth_type=iam \\\r\n    policies=admin-policy \\\r\n    max_ttl=1h \\\r\n    bound_iam_principal_arn=${vault_instance_role}\r\n\r\necho \"[] Userdata finished.\"\r\n\r\n",
            "vars": {
              "dynamodb-table": "vault-table",
              "instance-role": "vault-role",
              "region": "us-west-2",
              "secret_recovery_id": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx",
              "secret_token_id": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo",
              "unseal-key": "19dbd4e6-d9bc-4839-b040-24e7c92bdf9a",
              "vault_bucket": "vault-conf-bucket-01010101",
              "vault_instance_role": "arn:aws:iam:us-west-2:288866261642:role/vault-role"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "vault-table",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-west-2:288866261642:table/vault-table",
            "attribute": [
              {
                "name": "Key",
                "type": "S"
              },
              {
                "name": "Path",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "Path",
            "id": "vault-table",
            "local_secondary_index": [],
            "name": "vault-table",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": "Key",
            "read_capacity": 1,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "",
            "tags": {
              "Name": "vault-table"
            },
            "tags_all": {
              "Name": "vault-table"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "vault-kms-unseal",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::288866261642:instance-profile/vault-instance-profile",
            "create_date": "2022-11-14T16:17:03Z",
            "id": "vault-instance-profile",
            "name": "vault-instance-profile",
            "name_prefix": null,
            "path": "/",
            "role": "vault-role",
            "tags": null,
            "tags_all": {},
            "unique_id": "AIPAUGQOFLKFLJRVMXBN6"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-install.aws_iam_role.vault-kms-unseal",
            "module.vault-install.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "vault-kms-unseal",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::288866261642:role/vault-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2022-11-14T16:17:03Z",
            "description": "",
            "force_detach_policies": false,
            "id": "vault-role",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "vault-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAUGQOFLKFBRYJXKINE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-install.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "vault-kms-unseal",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault-role:vault-role-policy",
            "name": "vault-role-policy",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"VaultKMSUnseal\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ssmrole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"ec2role\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"VaultDynamoDB\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:ListTagsOfResource\",\n        \"dynamodb:ListTables\",\n        \"dynamodb:GetRecords\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:DescribeTimeToLive\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:DescribeReservedCapacityOfferings\",\n        \"dynamodb:DescribeReservedCapacity\",\n        \"dynamodb:DescribeLimits\",\n        \"dynamodb:DeleteItem\",\n        \"dynamodb:CreateTable\",\n        \"dynamodb:BatchWriteItem\",\n        \"dynamodb:BatchGetItem\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:288866261642:table/*\"\n    },\n    {\n      \"Sid\": \"IAM\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:AssumeRole\",\n        \"iam:UpdateAccessKey\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetUser\",\n        \"iam:GetRole\",\n        \"iam:GetInstanceProfile\",\n        \"iam:GetAccessKeyLastUsed\",\n        \"iam:DeleteAccessKey\",\n        \"iam:CreateAccessKey\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"S3\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::vault-conf-bucket-01010101/*\"\n    },\n    {\n      \"Sid\": \"SecretsManager\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"secretsmanager:UpdateSecret\",\n        \"secretsmanager:GetSecretValue\"\n      ],\n      \"Resource\": [\n        \"arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo\",\n        \"arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx\"\n      ]\n    }\n  ]\n}",
            "role": "vault-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-install.aws_iam_role.vault-kms-unseal",
            "module.vault-install.aws_secretsmanager_secret.vault-recovery-key",
            "module.vault-install.aws_secretsmanager_secret.vault-root-token",
            "module.vault-install.data.aws_iam_policy_document.assume_role",
            "module.vault-install.data.aws_iam_policy_document.vault-kms-unseal"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_instance",
      "name": "vault",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-08e2d37b6a0129927",
            "arn": "arn:aws:ec2:us-west-2:288866261642:instance/i-052fc9c30e8266d9d",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2c",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "host_resource_group_arn": null,
            "iam_instance_profile": "vault-instance-profile",
            "id": "i-052fc9c30e8266d9d",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "mykey",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-009c798d19b973906",
            "private_dns": "ip-172-31-8-50.us-west-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.8.50",
            "public_dns": "ec2-54-200-44-59.us-west-2.compute.amazonaws.com",
            "public_ip": "54.200.44.59",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-09d9c0f735a47ab55",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "install-sg"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-04ea7fa37e94db06d",
            "tags": {
              "Name": "Vault Server"
            },
            "tags_all": {
              "Name": "Vault Server"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "b34735f58a88f7d66fd9b33b1af732c5aa0d8329",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-045c10434f1a074fd"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vault-install.aws_dynamodb_table.vault-table",
            "module.vault-install.aws_iam_instance_profile.vault-kms-unseal",
            "module.vault-install.aws_iam_role.vault-kms-unseal",
            "module.vault-install.aws_kms_key.vault-unseal-key",
            "module.vault-install.aws_secretsmanager_secret.vault-recovery-key",
            "module.vault-install.aws_secretsmanager_secret.vault-root-token",
            "module.vault-install.aws_security_group.sg-vault",
            "module.vault-install.data.aws_iam_policy_document.assume_role",
            "module.vault-install.data.template_file.userdata"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "ssh-keypair",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:288866261642:key-pair/ssh-keypair",
            "fingerprint": "43:43:0b:4e:29:89:a5:da:80:95:47:fd:34:fc:d2:0f",
            "id": "ssh-keypair",
            "key_name": "ssh-keypair",
            "key_name_prefix": "",
            "key_pair_id": "key-0c2d03d82a98138be",
            "key_type": "rsa",
            "public_key": "---- BEGIN SSH2 PUBLIC KEY ----\r\nComment: \"rsa-key-20220727\"\r\nAAAAB3NzaC1yc2EAAAADAQABAAABAQCc9pcYjHkRb+C8IJyXo/bFoKS55SYBJ154\r\nBRvOZeKVemH6qY9lYrBzKX6ICtCKkJoERjlB6AczpzpZfe18qrTD+JWQdiTWCOP6\r\njjsbhL3UyVJ8tmaZVdAj8sndE83bUsqvu/zaXqBUmVIfqUAGNqrKzzloip8BkHFe\r\nWec0SgEQZ4lctj+9xN5jEGwaQbsyRhvL7CWetI7c4ai1YPZ9raZGxCEHkjtodhXr\r\nj4fExkc7/0mZrdQz5ZerTAIzjqqvzwqpZwdEGAEo+tyTxdBjrskFVymlZnkzuh7Y\r\ntqqmuGVEMly8BOXIXGyd+wCWh6AlYZ4HuO2qS0svX3mpSvwkUOuv\r\n---- END SSH2 PUBLIC KEY ----",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "vault-kms-alias",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:288866261642:alias/vault-unseal-key",
            "id": "alias/vault-unseal-key",
            "name": "alias/vault-unseal-key",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-west-2:288866261642:key/19dbd4e6-d9bc-4839-b040-24e7c92bdf9a",
            "target_key_id": "19dbd4e6-d9bc-4839-b040-24e7c92bdf9a"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-install.aws_kms_key.vault-unseal-key"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "vault-unseal-key",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:288866261642:key/19dbd4e6-d9bc-4839-b040-24e7c92bdf9a",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 7,
            "description": "KMS Key to unseal Vault",
            "enable_key_rotation": false,
            "id": "19dbd4e6-d9bc-4839-b040-24e7c92bdf9a",
            "is_enabled": true,
            "key_id": "19dbd4e6-d9bc-4839-b040-24e7c92bdf9a",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::288866261642:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "vault_config_bucket",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::vault-conf-bucket-01010101",
            "bucket": "vault-conf-bucket-01010101",
            "bucket_domain_name": "vault-conf-bucket-01010101.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "vault-conf-bucket-01010101.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "d8b879d5562b8b2f416df42135ab7d4177933316e652d00190aaa785848a26e7",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "vault-conf-bucket-01010101",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {
              "Name": "vault-conf-bucket-01010101"
            },
            "tags_all": {
              "Name": "vault-conf-bucket-01010101"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "vault_admin_policy",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "vault-conf-bucket-01010101",
            "bucket_key_enabled": false,
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "645d3eee5600a452c385a2e1aef3d2bc",
            "force_destroy": false,
            "id": "vault-admin-policy.hcl",
            "key": "vault-admin-policy.hcl",
            "kms_key_id": null,
            "metadata": null,
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "module/install/templates/vault-admin-policy.hcl",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": null,
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-install.aws_s3_bucket.vault_config_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_secretsmanager_secret",
      "name": "vault-recovery-key",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx",
            "description": "Vault recovery key",
            "force_overwrite_replica_secret": false,
            "id": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-recovery-key1-6BQ0qx",
            "kms_key_id": "",
            "name": "vault-recovery-key1",
            "name_prefix": "",
            "policy": "",
            "recovery_window_in_days": 0,
            "replica": [],
            "rotation_enabled": false,
            "rotation_lambda_arn": "",
            "rotation_rules": [],
            "tags": {
              "Name": "vault-recovery-key1"
            },
            "tags_all": {
              "Name": "vault-recovery-key1"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_secretsmanager_secret",
      "name": "vault-root-token",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo",
            "description": "Vault root token",
            "force_overwrite_replica_secret": false,
            "id": "arn:aws:secretsmanager:us-west-2:288866261642:secret:vault-root-token1-EnpcCo",
            "kms_key_id": "",
            "name": "vault-root-token1",
            "name_prefix": "",
            "policy": "",
            "recovery_window_in_days": 0,
            "replica": [],
            "rotation_enabled": false,
            "rotation_lambda_arn": "",
            "rotation_rules": [],
            "tags": {
              "Name": "vault-root-token1"
            },
            "tags_all": {
              "Name": "vault-root-token1"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault-install",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "sg-vault",
      "provider": "module.vault-install.provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:288866261642:security-group/sg-045c10434f1a074fd",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "id": "sg-045c10434f1a074fd",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8200,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8200
              }
            ],
            "name": "install-sg",
            "name_prefix": "",
            "owner_id": "288866261642",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "Vault SG"
            },
            "tags_all": {
              "Name": "Vault SG"
            },
            "timeouts": null,
            "vpc_id": "vpc-00aedca929b5eebf1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "data",
      "type": "archive_file",
      "name": "s3_files",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "01bba78d5a5c436579558ab02eb98ea83c1db737",
            "output_base64sha256": "mGiKzad8EIeb0MLGNakS7ovP5815uNxu7WBvaCCKIz8=",
            "output_file_mode": null,
            "output_md5": "f29e9f7be1a017afbd2f146b13ac8214",
            "output_path": "function.zip",
            "output_sha": "01bba78d5a5c436579558ab02eb98ea83c1db737",
            "output_size": 1433,
            "source": [],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": "module/lambda/function",
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "288866261642",
            "arn": "arn:aws:iam::288866261642:user/terraform",
            "id": "288866261642",
            "user_id": "AIDAUGQOFLKFFOUXXDMMM"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1803390208",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": [\n          \"lambda.amazonaws.com\",\n          \"backup.amazonaws.com\"\n        ]\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "backup.amazonaws.com",
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda_restore",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:288866261642:log-group:/aws/lambda/restore",
            "id": "/aws/lambda/restore",
            "kms_key_id": "",
            "name": "/aws/lambda/restore",
            "name_prefix": null,
            "retention_in_days": 1,
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role_restore",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::288866261642:role/aws-vault-restore-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"lambda.amazonaws.com\",\"backup.amazonaws.com\"]},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2022-11-14T16:17:02Z",
            "description": "",
            "force_detach_policies": false,
            "id": "aws-vault-restore-role",
            "inline_policy": [
              {
                "name": "my_inline_policy",
                "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogGroup\",\"logs:CreateLogStream\",\"ec2:StartInstances\",\"ec2:AttachVolume\",\"kms:Encrypt\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"backup:GetRecoveryPointRestoreMetadata\",\"backup:StartRestoreJob\",\"backup:DescribeRestoreJob\",\"backup:ListRestoreJobs\",\"backup:ListRecoveryPointsByResource\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"backup:DescribeBackupVault\",\"backup:PutBackupVaultNotifications\",\"backup:ListRecoveryPointsByBackupVault\",\"backup:GetBackupVaultNotifications\",\"backup:GetBackupVaultAccessPolicy\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:backup:*:288866261642:backup-vault:*\"},{\"Action\":[\"iam:*\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::288866261642:role/*\"},{\"Action\":[\"ssm:*\"],\"Effect\":\"Allow\",\"Resource\":[\"*\"]},{\"Action\":[\"ec2:*\"],\"Effect\":\"Allow\",\"Resource\":[\"*\"]}],\"Version\":\"2012-10-17\"}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
              "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores"
            ],
            "max_session_duration": 3600,
            "name": "aws-vault-restore-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAUGQOFLKFEWPIREMDV"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-restore-lambda.data.aws_caller_identity.current",
            "module.vault-restore-lambda.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "restore-vault-lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-west-2:288866261642:function:ddb-vault-restore",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "name": "restore-lambda"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "ddb-vault-restore",
            "handler": "restore.lambda_handler",
            "id": "ddb-vault-restore",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:288866261642:function:ddb-vault-restore/invocations",
            "kms_key_arn": "",
            "last_modified": "2022-11-14T16:17:14.304+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:288866261642:function:ddb-vault-restore:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:288866261642:function:ddb-vault-restore:$LATEST/invocations",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::288866261642:role/aws-vault-restore-role",
            "runtime": "python3.9",
            "s3_bucket": "lambda-vault-restore",
            "s3_key": "function.zip",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "mGiKzad8EIeb0MLGNakS7ovP5815uNxu7WBvaCCKIz8=",
            "source_code_size": 1433,
            "tags": null,
            "tags_all": {},
            "timeout": 303,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "Active"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault-restore-lambda.aws_iam_role.role_restore",
            "module.vault-restore-lambda.aws_s3_bucket.lambda_s3_bucket",
            "module.vault-restore-lambda.aws_s3_object.file_upload",
            "module.vault-restore-lambda.data.archive_file.s3_files",
            "module.vault-restore-lambda.data.aws_caller_identity.current",
            "module.vault-restore-lambda.data.aws_iam_policy_document.assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "lambda_s3_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::lambda-vault-restore",
            "bucket": "lambda-vault-restore",
            "bucket_domain_name": "lambda-vault-restore.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "lambda-vault-restore.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "d8b879d5562b8b2f416df42135ab7d4177933316e652d00190aaa785848a26e7",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "lambda-vault-restore",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {
              "Environment": "Test",
              "Name": "My Bucket"
            },
            "tags_all": {
              "Environment": "Test",
              "Name": "My Bucket"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "lambda_s3_bucket_acl",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "display_name": "murugancelpip",
                        "email_address": "",
                        "id": "d8b879d5562b8b2f416df42135ab7d4177933316e652d00190aaa785848a26e7",
                        "type": "CanonicalUser",
                        "uri": ""
                      }
                    ],
                    "permission": "FULL_CONTROL"
                  }
                ],
                "owner": [
                  {
                    "display_name": "murugancelpip",
                    "id": "d8b879d5562b8b2f416df42135ab7d4177933316e652d00190aaa785848a26e7"
                  }
                ]
              }
            ],
            "acl": "private",
            "bucket": "lambda-vault-restore",
            "expected_bucket_owner": "",
            "id": "lambda-vault-restore,private"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-restore-lambda.aws_s3_bucket.lambda_s3_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.vault-restore-lambda",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "file_upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "lambda-vault-restore",
            "bucket_key_enabled": false,
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "f29e9f7be1a017afbd2f146b13ac8214",
            "force_destroy": false,
            "id": "function.zip",
            "key": "function.zip",
            "kms_key_id": null,
            "metadata": null,
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "function.zip",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": null,
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault-restore-lambda.aws_s3_bucket.lambda_s3_bucket",
            "module.vault-restore-lambda.data.archive_file.s3_files"
          ]
        }
      ]
    }
  ]
}
